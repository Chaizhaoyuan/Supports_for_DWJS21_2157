%直流潮流 不考虑网损
%以节点27为摄动点，不断求解节点边际电价，为了得到节点边际电价的分段拟合曲线
%日前购电，不考虑注入功率为负值，注入功率范围为[0,500]，不考虑阻塞约束
clear
clc
tic
%基础数据
DLMP_data=zeros(24,51);
Loadcurve=[0.710760795065113;0.673577793008910;0.663982179575052;0.660726525017135;0.668265935572310;0.696024674434544;0.799177518848526;0.932488005483208;1;0.979780671692940;0.930774503084304;0.912268677176148;0.911754626456477;0.877655928718300;0.868060315284442;0.861549006168609;0.845270733379027;0.885538039753256;0.954763536668951;0.968300205620288;0.932488005483208;0.900959561343386;0.841501028101439;0.733036326250857];
TOU=[0.414849600000000,0.393076800000000,0.387504000000000,0.385560000000000,0.389966400000000,0.406166400000000,0.466430400000000,0.544190400000000,0.583588800000000,0.571795200000000,0.543153600000000,0.532396800000000,0.532137600000000,0.512179200000000,0.506606400000000,0.502848000000000,0.493257600000000,0.516844800000000,0.557150400000000,0.565056000000000,0.544190400000000,0.525787200000000,0.491054400000000,0.427809600000000]';
%循环仿真
for t=1:24
    for n=0:50
        Pload
        Pload=Loadcurve(t)*Pload;
        Pload(27)=Pload(27)+10*n/100/1000;
        Line=[33.0000000000000 + 0.00000000000000i,1.00000000000000 + 0.00000000000000i,0.0922000000000000 + 0.0470000000000000i;1.00000000000000 + 0.00000000000000i,2.00000000000000 + 0.00000000000000i,0.493000000000000 + 0.251100000000000i;2.00000000000000 + 0.00000000000000i,3.00000000000000 + 0.00000000000000i,0.366000000000000 + 0.186400000000000i;3.00000000000000 + 0.00000000000000i,4.00000000000000 + 0.00000000000000i,0.381100000000000 + 0.194100000000000i;4.00000000000000 + 0.00000000000000i,5.00000000000000 + 0.00000000000000i,0.819000000000000 + 0.707000000000000i;5.00000000000000 + 0.00000000000000i,6.00000000000000 + 0.00000000000000i,0.187200000000000 + 0.618800000000000i;6.00000000000000 + 0.00000000000000i,7.00000000000000 + 0.00000000000000i,0.711400000000000 + 0.235100000000000i;7.00000000000000 + 0.00000000000000i,8.00000000000000 + 0.00000000000000i,1.03000000000000 + 0.740000000000000i;8.00000000000000 + 0.00000000000000i,9.00000000000000 + 0.00000000000000i,1.04400000000000 + 0.740000000000000i;9.00000000000000 + 0.00000000000000i,10.0000000000000 + 0.00000000000000i,0.196600000000000 + 0.0650000000000000i;10.0000000000000 + 0.00000000000000i,11.0000000000000 + 0.00000000000000i,0.374400000000000 + 0.123800000000000i;11.0000000000000 + 0.00000000000000i,12.0000000000000 + 0.00000000000000i,1.46800000000000 + 1.15500000000000i;12.0000000000000 + 0.00000000000000i,13.0000000000000 + 0.00000000000000i,0.541600000000000 + 0.712900000000000i;13.0000000000000 + 0.00000000000000i,14.0000000000000 + 0.00000000000000i,0.591000000000000 + 0.526000000000000i;14.0000000000000 + 0.00000000000000i,15.0000000000000 + 0.00000000000000i,0.746300000000000 + 0.545000000000000i;15.0000000000000 + 0.00000000000000i,16.0000000000000 + 0.00000000000000i,1.28900000000000 + 1.72100000000000i;16.0000000000000 + 0.00000000000000i,17.0000000000000 + 0.00000000000000i,0.372000000000000 + 0.574000000000000i;1.00000000000000 + 0.00000000000000i,18.0000000000000 + 0.00000000000000i,0.164000000000000 + 0.156500000000000i;18.0000000000000 + 0.00000000000000i,19.0000000000000 + 0.00000000000000i,1.50420000000000 + 1.35540000000000i;19.0000000000000 + 0.00000000000000i,20.0000000000000 + 0.00000000000000i,0.409500000000000 + 0.478400000000000i;20.0000000000000 + 0.00000000000000i,21.0000000000000 + 0.00000000000000i,0.708900000000000 + 0.937300000000000i;2.00000000000000 + 0.00000000000000i,22.0000000000000 + 0.00000000000000i,0.451200000000000 + 0.308300000000000i;22.0000000000000 + 0.00000000000000i,23.0000000000000 + 0.00000000000000i,0.898000000000000 + 0.709100000000000i;23.0000000000000 + 0.00000000000000i,24.0000000000000 + 0.00000000000000i,0.896000000000000 + 0.701100000000000i;5.00000000000000 + 0.00000000000000i,25.0000000000000 + 0.00000000000000i,0.203000000000000 + 0.103400000000000i;25.0000000000000 + 0.00000000000000i,26.0000000000000 + 0.00000000000000i,0.284200000000000 + 0.144700000000000i;26.0000000000000 + 0.00000000000000i,27.0000000000000 + 0.00000000000000i,1.05900000000000 + 0.933700000000000i;27.0000000000000 + 0.00000000000000i,28.0000000000000 + 0.00000000000000i,0.804200000000000 + 0.700600000000000i;28.0000000000000 + 0.00000000000000i,29.0000000000000 + 0.00000000000000i,0.507500000000000 + 0.258500000000000i;29.0000000000000 + 0.00000000000000i,30.0000000000000 + 0.00000000000000i,0.974400000000000 + 0.963000000000000i;30.0000000000000 + 0.00000000000000i,31.0000000000000 + 0.00000000000000i,0.310500000000000 + 0.361900000000000i;31.0000000000000 + 0.00000000000000i,32.0000000000000 + 0.00000000000000i,0.341000000000000 + 0.536200000000000i];
        Line(:,3)=Line(:,3)*100/(12.66^2);
        father=zeros(33,32);son=zeros(33,32);
        for i=1:32
            father(i,i)=1;
        end
        for i=[1:16,18:20,22:23,25:31]
            son(i,i+1)=1;
        end
        son(1,18)=1;son(2,22)=1;son(5,25)=1;son(33,1)=1;
        Pgmax=[0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0.1;0.1];%发电机边界
        %定义变量
        P=sdpvar(32,1);%线路有功
        Pg=sdpvar(33,1);%发电机有功
        Pin=-father*P+son*P;%节点注入有功
        Cost_total=0.8*Pg(32)+0.5*0.00015709*100*1000*Pg(33)^2;%目标函数，电费最小
        %约束条件
        C1=[Pg>=0,Pg<=Pgmax,P>=-0.11,P<=0.11];%边界
        C2=[Pin+Pload-Pg==0];%有功KCL约束
        C=[C1,C2];
        toc%建模时间
        ops=sdpsettings('solver','gurobi');
        result=solvesdp(C,Cost_total,ops)
        toc%求解时间
        Cost_total=100*1000*double(Cost_total)
        DLMP=dual(C2);
        DLMP_data(t,n+1)=DLMP(27);
    end
end
save('DC_nolimit_DA','DLMP_data')